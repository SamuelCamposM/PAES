{"ast":null,"code":"var _jsxFileName = \"/home/samuel/Escritorio/paes/frontend/src/Context/auth/authState.js\";\nimport React, { useReducer } from 'react'; //dontext \n\nimport authContext from './authContext'; //reducer\n\nimport authReducer from './authReducer'; //axios\n\nimport clienteAxios from \"../../config/axios\";\nimport tokenAuth from \"../../config/token\"; //types\n\nimport { REGISTRO_EXITOSO, REGISTRO_ERROR, OBTENER_USUARIO, LOGIN_EXITOSO, LOGIN_ERROR, CERRAR_SESION, REGISTRO_EXITOSO_GOOGLE } from \"../../types\";\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    autenticado: null,\n    usuario: null,\n    mensaje: null,\n    cargando: true\n  };\n  const [state, dispatch] = useReducer(authReducer, initialState); //registrar con google \n  //funciones\n\n  const registrarGoogle = async cookie => {\n    console.log(\"desde el context\", cookie);\n\n    try {\n      //coloca el token en el local storage\n      if (!cookie) {\n        return;\n      }\n\n      await dispatch({\n        type: REGISTRO_EXITOSO_GOOGLE,\n        payload: cookie\n      }); //obtener el usuario\n\n      usuarioAutenticado();\n    } catch (error) {\n      console.log(\"eerrror\", error.response);\n      const alerta = {\n        msg: error.response.data.mensaje,\n        categoria: 'alerta-error'\n      };\n      dispatch({\n        type: REGISTRO_ERROR,\n        payload: alerta\n      });\n    }\n  }; //registrar usuario \n\n\n  const registrarUsuario = async datos => {\n    console.log(datos);\n\n    try {\n      const respuesta = await clienteAxios.post(\"/usuarios/\", datos);\n      console.log(\"respuesta\", respuesta.data.token);\n      dispatch({\n        type: REGISTRO_EXITOSO,\n        payload: respuesta.data\n      });\n      usuarioAutenticado();\n    } catch (error) {\n      console.log(error.response.data.msg);\n      const alerta = {\n        msg: error.response.data.msg,\n        categoria: \" alerta Error\"\n      };\n      dispatch({\n        type: REGISTRO_ERROR,\n        payload: alerta\n      });\n    }\n  }; //retorna al usuario autenticado\n\n\n  const usuarioAutenticado = async () => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      //funcion que colocca  el token en el header\n      tokenAuth(token);\n    }\n\n    try {\n      const usuario = await clienteAxios.get('/usuarios/auth');\n      console.log(usuario.data.usuario);\n      dispatch({\n        type: OBTENER_USUARIO,\n        payload: usuario.data.usuario\n      });\n    } catch (error) {\n      console.log(error.response.data.msg);\n      dispatch({\n        type: LOGIN_ERROR\n      });\n    }\n  }; //cuando el usuario inicia sesion \n\n\n  const iniciarSesion = async datos => {\n    try {\n      const token = await clienteAxios.post('/usuarios/login', datos);\n      console.log(token);\n      dispatch({\n        type: LOGIN_EXITOSO,\n        payload: token.data\n      });\n      usuarioAutenticado();\n    } catch (error) {\n      console.log(error.response.data.msg);\n      const alerta = {\n        msg: error.response.data.msg,\n        categoria: \" alerta Error\"\n      };\n      dispatch({\n        type: LOGIN_ERROR,\n        payload: alerta\n      });\n    }\n  };\n\n  const cerrarSesion = () => {\n    dispatch({\n      type: CERRAR_SESION\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(authContext.Provider, {\n    value: {\n      //state\n      token: state.token,\n      autenticado: state.autenticado,\n      usuario: state.usuario,\n      mensaje: state.mensaje,\n      cargando: state.cargando,\n      //funciones\n      registrarUsuario,\n      iniciarSesion,\n      usuarioAutenticado,\n      cerrarSesion,\n      registrarGoogle\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 12\n    }\n  }, props.children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["/home/samuel/Escritorio/paes/frontend/src/Context/auth/authState.js"],"names":["React","useReducer","authContext","authReducer","clienteAxios","tokenAuth","REGISTRO_EXITOSO","REGISTRO_ERROR","OBTENER_USUARIO","LOGIN_EXITOSO","LOGIN_ERROR","CERRAR_SESION","REGISTRO_EXITOSO_GOOGLE","AuthState","props","initialState","token","localStorage","getItem","autenticado","usuario","mensaje","cargando","state","dispatch","registrarGoogle","cookie","console","log","type","payload","usuarioAutenticado","error","response","alerta","msg","data","categoria","registrarUsuario","datos","respuesta","post","get","iniciarSesion","cerrarSesion","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\n//dontext \nimport authContext from './authContext';\n//reducer\nimport authReducer from './authReducer';\n\n//axios\nimport clienteAxios from \"../../config/axios\"\nimport tokenAuth from \"../../config/token\"\n\n//types\nimport {REGISTRO_EXITOSO,\n    REGISTRO_ERROR,\n    OBTENER_USUARIO,\n    LOGIN_EXITOSO,\n    LOGIN_ERROR,\n    CERRAR_SESION,\n    REGISTRO_EXITOSO_GOOGLE\n} from \"../../types\"\n\nconst AuthState = (props ) =>{\n    const initialState = {\n            token: localStorage.getItem('token'),\n            autenticado: null,\n            usuario: null,\n            mensaje: null,\n            cargando : true \n\n    }\n    const [state , dispatch] = useReducer(authReducer , initialState)\n\n//registrar con google \n\n  //funciones\n  const registrarGoogle = async (cookie)=> {\n    console.log(\"desde el context\",cookie)\n      \n    try {\n    \n        \n  //coloca el token en el local storage\n  if (!cookie){\n  return\n  \n  }\n      await  dispatch({\n            type: REGISTRO_EXITOSO_GOOGLE,\n            payload: cookie\n        })\n        //obtener el usuario\n        usuarioAutenticado()\n        \n    } catch (error) {\n      console.log(\"eerrror\",error.response);\n      const alerta = {\n          msg : error.response.data.mensaje ,\n          categoria : 'alerta-error'\n      }\n        dispatch({\n            type: REGISTRO_ERROR,\n            payload: alerta\n        })\n        \n    }\n  }\n    //registrar usuario \n    const registrarUsuario = async datos=> {\n        console.log(datos)\n        try {\n            const respuesta  = await  clienteAxios.post(\"/usuarios/\", datos)\n            console.log(\"respuesta\",respuesta.data.token );\n            \n            dispatch({\n                type:REGISTRO_EXITOSO,\n                payload: respuesta.data\n            })\n            usuarioAutenticado( )\n        } catch (error) {\n            console.log(error.response.data.msg)\n            const alerta = {\n                msg : error.response.data.msg,\n                categoria :\" alerta Error\"\n            }\n            dispatch({\n                type: REGISTRO_ERROR,\n                payload: alerta\n            })\n        }\n    }\n    //retorna al usuario autenticado\n\n    const usuarioAutenticado = async () => {\n        const token  = localStorage.getItem('token')\n\n        if(token){\n            //funcion que colocca  el token en el header\n            tokenAuth(token)\n        }\n      \n        try {\n            const usuario = await clienteAxios.get('/usuarios/auth')\n            console.log(usuario.data.usuario)\n            dispatch({\n                type: OBTENER_USUARIO,\n                payload: usuario.data.usuario\n\n            })\n        } catch (error) {\n            console.log(error.response.data.msg);\n            dispatch({\n                type:LOGIN_ERROR\n            })\n            \n        }\n    }\n\n    //cuando el usuario inicia sesion \n\n    const iniciarSesion = async datos => {\n\n\n        try {\n            const token = await clienteAxios.post('/usuarios/login', datos)\n            console.log(token)\n\n            dispatch({\n                type: LOGIN_EXITOSO,\n                payload :token.data\n            })\n\n            usuarioAutenticado()\n        } catch (error) {\n            console.log(error.response.data.msg)\n            const alerta = {\n                msg : error.response.data.msg,\n                categoria :\" alerta Error\"\n            }\n            dispatch({\n                type: LOGIN_ERROR,\n                payload: alerta\n            })\n        }\n    }\n    const cerrarSesion = () => {\n        dispatch({\n            type:CERRAR_SESION\n        })\n    }\n\n    return <authContext.Provider\n    value={{\n        //state\n        token: state.token,\n        autenticado : state.autenticado,\n        usuario: state.usuario,\n        mensaje: state.mensaje,\ncargando :state.cargando,\n        //funciones\n        registrarUsuario,\n        iniciarSesion,\n        usuarioAutenticado,\n        cerrarSesion,\n        registrarGoogle\n    }}\n    >\n\n        {props.children}\n    </authContext.Provider>\n}\nexport default AuthState;"]},"metadata":{},"sourceType":"module"}